version: '3.5'

services:
  postgres:
    container_name: postgres
    image:  postgres:10.5
    ports:
      - "5432:5432" 
    env_file:
      - .env
    volumes: 
      - postgres:/var/lib/postgresql/data
    networks:
      - my_network
    restart: always

  api:
    container_name: api
    build: ./api
    depends_on:
      - postgres 
    env_file:
      - .env
    ports:
      - "5000:5000"
    networks:
      - my_network
    restart: always
    volumes:
      - ./api:/app
      - /node_modules

  front:
    container_name: client
    build: ./client
    depends_on:
      - api 
    networks:
      - my_network
    ports:
      - 3000:3000
    restart: always
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - WDS_SOCKET_HOST=127.0.0.1 
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: npm run start

  nginx:
    image: nginx:1.15
    container_name: nginx
    volumes:
      - ../:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - my_network
    depends_on:
      - api
      - front

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - my_network

volumes:
  postgres:
    driver: local

networks:
  my_network:
    name: my_network
